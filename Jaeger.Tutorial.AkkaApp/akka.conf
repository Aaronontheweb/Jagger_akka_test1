akka{
    # here we are configuring log levels
    log-config-on-start = on
    stdout-loglevel = DEBUG
    loglevel = DEBUG
        
    # this config section will be referenced as akka.actor
    actor {
        debug {
        receive = off
        autoreceive = off
        lifecycle = on
        fsm = on
        event-stream = on
        unhandled = on
        router-misconfiguration = on
        }
        provider = "Phobos.Actor.PhobosActorRefProvider, Phobos.Actor"
    }
}

phobos{
    monitoring{
        # The metric recorder Provider implementation used by Phobos.Monitoring
	    # Supported built-in name types include: `default`, `test`, and `statsd`
	    # But you can override this value with the fully-qualified type name of any class
	    # that implements the Phobos.Monitoring.Actor.MetricProviderBase class.
        provider-type = default
            
        # Setting used to trigger monitoring for all built-in /system actors by default.
	    # When set to "on," all /system actors will automatically be outfitted with monitoring
	    # instrumentation.
	    monitor-all-system-actors = on
            
        # Setting used to trigger monitoring for all /user actors by default.
	    # When set to "on," all /user actors will automatically be outfitted with monitoring
	    # instrumentation.
	    monitor-all-user-actors = on
            
        # Global sample rate for all monitoring
	    sample-rate = 1.0
            
        # When enabled, records all of the default events that pass through the eventstream
	    # (log events, dead letters, and unhandled messages) and writes that out to a Global
	    # counter for the ActorSystem as a whole.
	    monitor-eventstream = on
    }

    tracing{
        provider-type = jaeger
        jaeger.agent.host = "localhost"
        jaeger.agent.port = 6831
        sample-rate = 1.0
        use-actorscopemanager = on
    }
}
